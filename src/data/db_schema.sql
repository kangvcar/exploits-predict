/*
exploits_predict_sqlite.db schema v0.1
SQL script to create db schema for exploits-predict project (from scratch).
*/

-- create cve table
CREATE TABLE cve (
    cve_id TEXT PRIMARY KEY,
    cve_published datetime, 
    cve_lastModified datetime,
    cve_description TEXT,
    cve_vulnStatus TEXT,
    cve_sourceIdentifier TEXT,
    cvssv3_vectorString TEXT,
    cvssv3_baseScore REAL,
    cvssv3_exploitabilityScore REAL,
    cvssv3_impactScore REAL,
    cve_raw_json JSON,
    frozen_mode_date datetime  -- if not null, then cve is ready for model prediction and all fields is frozen for further modification
);

-- create exploit table
CREATE TABLE exploit (
    exploit_id TEXT PRIMARY KEY,
    exploit_type TEXT,
    exploit_published datetime,
    exploit_modified datetime,
    exploit_title TEXT,
    exploit_cvelist_orig TEXT,
    exploit_cvelist_norm TEXT, -- normalized to CVE pattern
    href TEXT
);

-- create cve_exploit table
CREATE TABLE cve_exploit (
    cve_id TEXT NOT NULL,
    exploit_id TEXT NOT NULL,
    PRIMARY KEY (cve_id, exploit_id)
    FOREIGN KEY (cve_id) REFERENCES cve (cve_id),
    FOREIGN KEY (exploit_id) REFERENCES exploit (exploit_id)
);

-- create dbupdate_log table
CREATE TABLE dbupdate_stats (
    dbupdate_log_id INTEGER PRIMARY KEY AUTOINCREMENT,
    script_run_date datetime,
    cve_lastModified datetime,
    exploit_modified datetime,
    cve_count INTEGER, -- downloaded from API (pump out with a margin (1-2 pcs.))
    exploit_count INTEGER, -- downloaded from API (pump out with a margin (1-2 pcs.))
    error_message TEXT
);
